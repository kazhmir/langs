Program := { Statement }.
Block := '{' Program '}'

Statement := Def | IfSt | ForSt | ReturnSt.
Simple := ( '++' | '--' ) id ';'.
IfSt := 'if' Expr Block ['else' (Block | If)].
ForSt := 'for' Simple ';' Expr ';' Simple Block.
ReturnSt := 'return' Expr ';'

Def := id ['<-' Expr] ';'.

Expr := Arith [compOp Arith].
compOp := '=' | '!=' | '>' | '>=' | '<' | '<='.
Arith := Term {sumOp Term}.
sumOp := '+' | '-'.
Term := Unary {multOp Unary}.
multOp := '\*' | '/'.
Unary := unaryOp Factor.
unaryOp := '+' | '-' | 'not'.
Factor := '(' Expr ')'
	| id
	| int.

