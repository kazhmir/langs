package re

var tests = []struct {
	re     string
	tokens []token
	root   *node
	input  string
	ans    bool
}{
	{"a",
		[]token{
			{val: 'a', tp: char},
			{val: eof, tp: end},
		},
		&node{
			set: NewSet("a", false),
			tp:  set,
		},
		"abAbaa",
		false,
	},
	{"(a)",
		[]token{
			{val: '(', tp: ope},
			{val: 'a', tp: char},
			{val: ')', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			set: NewSet("a", false),
			tp:  set,
		},
		"a",
		true,
	},
	{"abc",
		[]token{
			{val: 'a', tp: char},
			{val: 'b', tp: char},
			{val: 'c', tp: char},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{set: NewSet("b", false), tp: set},
				{set: NewSet("c", false), tp: set},
			},
		},
		"abc",
		true,
	},
	{`\s\t\n`,
		[]token{
			{val: ' ', tp: char},
			{val: '\t', tp: char},
			{val: '\n', tp: char},
			{val: eof, tp: end},
		},

		&node{
			tp: and,
			children: []*node{
				{set: NewSet(" ", false), tp: set},
				{set: NewSet("\t", false), tp: set},
				{set: NewSet("\n", false), tp: set},
			},
		},
		"aaaa\ta\n aaa \t\n",
		false,
	},
	{"a|b|c",
		[]token{
			{val: 'a', tp: char},
			{val: '|', tp: ope},
			{val: 'b', tp: char},
			{val: '|', tp: ope},
			{val: 'c', tp: char},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{set: NewSet("b", false), tp: set},
				{set: NewSet("c", false), tp: set},
			},
		},
		"abc",
		false,
	},
	{"ab|ac",
		[]token{
			{val: 'a', tp: char},
			{val: 'b', tp: char},
			{val: '|', tp: ope},
			{val: 'a', tp: char},
			{val: 'c', tp: char},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{
					tp: and,
					children: []*node{
						{set: NewSet("a", false), tp: set},
						{set: NewSet("b", false), tp: set},
					},
				},
				{
					tp: and,
					children: []*node{
						{set: NewSet("a", false), tp: set},
						{set: NewSet("c", false), tp: set},
					},
				},
			},
		},
		"ab",
		true,
	},
	{"a*", []token{
		{val: 'a', tp: char},
		{val: '*', tp: ope},
		{val: eof, tp: end},
	},
		&node{
			tp: star,
			children: []*node{
				{set: NewSet("a", false), tp: set},
			},
		},
		"aaaa",
		true,
	},
	{"ab*",
		[]token{
			{val: 'a', tp: char},
			{val: 'b', tp: char},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{
					tp: star,
					children: []*node{
						{set: NewSet("b", false), tp: set},
					},
				},
			},
		},
		"abbbb",
		true,
	},
	{"a*b*",
		[]token{
			{val: 'a', tp: char},
			{val: '*', tp: ope},
			{val: 'b', tp: char},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{
					tp: star,
					children: []*node{
						{set: NewSet("a", false), tp: set},
					},
				},
				{
					tp: star,
					children: []*node{
						{set: NewSet("b", false), tp: set},
					},
				},
			},
		},
		"aaaaabbbbb",
		true,
	},
	{"a|b*",
		[]token{
			{val: 'a', tp: char},
			{val: '|', tp: ope},
			{val: 'b', tp: char},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{
					tp: star,
					children: []*node{
						{set: NewSet("b", false), tp: set},
					},
				},
			},
		},
		"bbb",
		true,
	},
	{"(a|b)*|c", []token{
		{val: '(', tp: ope},
		{val: 'a', tp: char},
		{val: '|', tp: ope},
		{val: 'b', tp: char},
		{val: ')', tp: ope},
		{val: '*', tp: ope},
		{val: '|', tp: ope},
		{val: 'c', tp: char},
		{val: eof, tp: end},
	},
		&node{
			tp: or,
			children: []*node{
				{
					tp: star,
					children: []*node{
						{
							tp: or,
							children: []*node{
								{set: NewSet("a", false), tp: set},
								{set: NewSet("b", false), tp: set},
							},
						},
					},
				},
				{set: NewSet("c", false), tp: set},
			},
		},
		"ababababababab",
		true,
	},
	{"[a-z]",
		[]token{
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ']', tp: ope},
			{val: eof, tp: end},
		},
		&node{set: NewSet("abcdefghijklmnopqrstuvwxyz", false), tp: set},
		"z",
		true,
	},
	{`[\t\n\s]`,
		[]token{
			{val: '[', tp: ope},
			{val: '\t', tp: char},
			{val: '\n', tp: char},
			{val: ' ', tp: char},
			{val: ']', tp: ope},
			{val: eof, tp: end},
		},
		&node{set: NewSet("\n\t ", false), tp: set},
		" ",
		true,
	},
	{"[a-z]|[A-Z]",
		[]token{
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ']', tp: ope},
			{val: '|', tp: ope},
			{val: '[', tp: ope},
			{val: 'A', tp: char},
			{val: '-', tp: ope},
			{val: 'Z', tp: char},
			{val: ']', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{set: NewSet("abcdefghijklmnopqrstuvwxyz", false), tp: set},
				{set: NewSet("ABCDEFGHIJKLMNOPQRSTUVWXYZ", false), tp: set},
			},
		},
		"Z",
		true,
	},
	{"[A-Z][a-z]*",
		[]token{
			{val: '[', tp: ope},
			{val: 'A', tp: char},
			{val: '-', tp: ope},
			{val: 'Z', tp: char},
			{val: ']', tp: ope},
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ']', tp: ope},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("ABCDEFGHIJKLMNOPQRSTUVWXYZ", false), tp: set},
				{
					tp: star,
					children: []*node{
						{set: NewSet("abcdefghijklmnopqrstuvwxyz", false), tp: set},
					},
				},
			},
		},
		"Aabcabcasd",
		true,
	},
	{`\s[a-z ]*`,
		[]token{
			{val: ' ', tp: char},
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ' ', tp: char},
			{val: ']', tp: ope},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet(" ", false), tp: set},
				{
					tp: star,
					children: []*node{
						{set: NewSet(" abcdefghijklmnopqrstuvwxyz", false), tp: set},
					},
				},
			},
		},
		" a a a a a a",
		true,
	},
	{"(a)|(c)",
		[]token{
			{val: '(', tp: ope},
			{val: 'a', tp: char},
			{val: ')', tp: ope},
			{val: '|', tp: ope},
			{val: '(', tp: ope},
			{val: 'c', tp: char},
			{val: ')', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{set: NewSet("c", false), tp: set},
			},
		},
		"c",
		true,
	},
	{"a[^a-z]*",
		[]token{
			{val: 'a', tp: char},
			{val: '[', tp: ope},
			{val: '^', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ']', tp: ope},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{
					tp: star,
					children: []*node{
						{set: NewSet("abcdefghijklmnopqrstuvwxyzc", true), tp: set},
					},
				},
			},
		},
		"aABGCDF",
		true,
	},
	{`a[a-z^]*`,
		[]token{
			{val: 'a', tp: char},
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: '^', tp: char},
			{val: ']', tp: ope},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{
					tp: star,
					children: []*node{
						{set: NewSet("^abcdefghijklmnopqrstuvwxyz", false), tp: set},
					},
				},
			},
		},
		"aaa^a^",
		true,
	},
	{`a|\e`,
		[]token{
			{val: 'a', tp: char},
			{val: '|', tp: ope},
			{val: 0, tp: empty},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{tp: emptyStr},
			},
		},
		"",
		true,
	},
	{`a|[]`,
		[]token{
			{val: 'a', tp: char},
			{val: '|', tp: ope},
			{val: '[', tp: ope},
			{val: ']', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: or,
			children: []*node{
				{set: NewSet("a", false), tp: set},
				{set: NewSet("", false), tp: set},
			},
		},
		"a",
		true,
	},
	{`[a-z]*\s\*`,
		[]token{
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ']', tp: ope},
			{val: '*', tp: ope},
			{val: ' ', tp: char},
			{val: '*', tp: char},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{
					tp: star,
					children: []*node{
						{set: NewSet("abcdefghijklmnopqrstuvwxyz", false), tp: set},
					},
				},
				{set: NewSet(" ", false), tp: set},
				{set: NewSet("*", false), tp: set},
			},
		},
		"asbaasbda *",
		true,
	},
	{"([A-Z]|[a-z])*",
		[]token{
			{val: '(', tp: ope},
			{val: '[', tp: ope},
			{val: 'A', tp: char},
			{val: '-', tp: ope},
			{val: 'Z', tp: char},
			{val: ']', tp: ope},
			{val: '|', tp: ope},
			{val: '[', tp: ope},
			{val: 'a', tp: char},
			{val: '-', tp: ope},
			{val: 'z', tp: char},
			{val: ']', tp: ope},
			{val: ')', tp: ope},
			{val: '*', tp: ope},
			{val: eof, tp: end},
		},
		&node{
			tp: star,
			children: []*node{
				{
					tp: or,
					children: []*node{
						{set: NewSet("ABCDEFGHIJKLMNOPQRSTUVWXYZ", false), tp: set},
						{set: NewSet("abcdefghijklmnopqrstuvwxyz", false), tp: set},
					},
				},
			},
		},
		"AbcvVVDVaaaCDCD",
		true,
	},
	{"\uFFFF",
		[]token{
			{val: '\uFFFF', tp: char},
			{val: eof, tp: end},
		},
		&node{
			set: NewSet("\uFFFF", false),
			tp:  set,
		},
		"\uFFFF",
		true,
	},
	{"\uFFFF[\u0000-\u0004]", []token{
		{val: '\uFFFF', tp: char},
		{val: '[', tp: ope},
		{val: '\u0000', tp: char},
		{val: '-', tp: ope},
		{val: '\u0004', tp: char},
		{val: ']', tp: ope},
		{val: eof, tp: end},
	},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("\uFFFF", false), tp: set},
				{set: NewSet("\u0000\u0001\u0002\u0003\u0004", false), tp: set},
			},
		},
		"\uFFFF\u0003",
		true,
	},
	{"\uFFFF\\s",
		[]token{
			{val: '\uFFFF', tp: char},
			{val: ' ', tp: char},
			{val: eof, tp: end},
		},
		&node{
			tp: and,
			children: []*node{
				{set: NewSet("\uFFFF", false), tp: set},
				{set: NewSet(" ", false), tp: set},
			},
		},
		"\uFFFF ",
		true,
	},
}
